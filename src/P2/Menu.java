package P2;

import java.io.File;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 * Clase que implementa la interfaz visual del programa y su funcionamiento
 *
 * @author Jonathan Jimenez Reina
 * @author Victor Alonso Nuñez
 */
public class Menu extends javax.swing.JFrame {

    Automata a;
    String entrada;
    //Modelo para la tabla donde se pintará el autómata
    DefaultTableModel modeloTabla;

    /**
     * Constructor de la clase
     */
    public Menu() {
        initComponents();
        modeloTabla = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tabla.setModel(modeloTabla);
        String[] columnasTabla = {"", "'0'", "'1'"};
        modeloTabla.setColumnIdentifiers(columnasTabla);
        tabla.getTableHeader().setResizingAllowed(false);
        tabla.getColumnModel().getColumn(0).setPreferredWidth(50);
        tabla.getColumnModel().getColumn(1).setPreferredWidth(30);
        tabla.getColumnModel().getColumn(2).setPreferredWidth(30);
        textAceptarRechazar.setText(" ");
        textCuadroSolucion.setText(" ");
        textPasoAPaso.setText(" ");
        botonPasoSiguiente.setEnabled(false);
        a = new Automata();
        entrada = new String();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ventanaEligeFichero = new javax.swing.JFileChooser();
        botonCargarFichero = new javax.swing.JButton();
        botonSimular = new javax.swing.JButton();
        campoIntroduceCadena = new javax.swing.JTextField();
        labelIntroduceSecuencia = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        textAceptarRechazar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        textPasoAPaso = new javax.swing.JLabel();
        botonPasoSiguiente = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textCuadroSolucion = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabelTipoSimulacion = new javax.swing.JLabel();
        jRadioButtonSimulacionRapida = new javax.swing.JRadioButton();
        jRadioButtonPasoAPaso = new javax.swing.JRadioButton();
        jLabelAutomataFinito = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabelTitulo1 = new javax.swing.JLabel();
        jLabelTitulo2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabelUHU = new javax.swing.JLabel();
        jLabelAutor2 = new javax.swing.JLabel();
        jLabelAutor1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Práctica 2: AFD y AFND");
        setResizable(false);

        botonCargarFichero.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        botonCargarFichero.setText("Examinar...");
        botonCargarFichero.setPreferredSize(new java.awt.Dimension(120, 30));
        botonCargarFichero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCargarFicheroActionPerformed(evt);
            }
        });

        botonSimular.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        botonSimular.setText("Simular");
        botonSimular.setEnabled(false);
        botonSimular.setPreferredSize(new java.awt.Dimension(120, 30));
        botonSimular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSimularActionPerformed(evt);
            }
        });

        labelIntroduceSecuencia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelIntroduceSecuencia.setText("Introducir secuencia de entrada: ");

        textAceptarRechazar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textAceptarRechazar.setText("ACEPTADA O RECHAZADA");

        tabla.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "", "'Símbolo'", "'Símbolo'"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.setRowSelectionAllowed(false);
        tabla.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setResizable(false);
        }

        textPasoAPaso.setText("ENTRADA PARA PASO A PASO");

        botonPasoSiguiente.setText("Siguiente paso");
        botonPasoSiguiente.setEnabled(false);
        botonPasoSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPasoSiguienteActionPerformed(evt);
            }
        });

        textCuadroSolucion.setEditable(false);
        textCuadroSolucion.setColumns(25);
        textCuadroSolucion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        textCuadroSolucion.setLineWrap(true);
        textCuadroSolucion.setRows(4);
        textCuadroSolucion.setBorder(null);
        jScrollPane2.setViewportView(textCuadroSolucion);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Introducir Autómata:");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelTipoSimulacion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelTipoSimulacion.setText("Tipo de simulación:");

        jRadioButtonSimulacionRapida.setText("Rápida");
        jRadioButtonSimulacionRapida.setEnabled(false);
        jRadioButtonSimulacionRapida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSimulacionRapidaActionPerformed(evt);
            }
        });

        jRadioButtonPasoAPaso.setText("Paso a paso");
        jRadioButtonPasoAPaso.setEnabled(false);
        jRadioButtonPasoAPaso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPasoAPasoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonSimulacionRapida)
                            .addComponent(jRadioButtonPasoAPaso)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelTipoSimulacion)))
                .addGap(0, 23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabelTipoSimulacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButtonSimulacionRapida)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButtonPasoAPaso)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jLabelAutomataFinito.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelAutomataFinito.setText("Autómata Finito: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabelTitulo1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabelTitulo1.setText("2019/2020 - Algorítmica y Modelos de Computación");

        jLabelTitulo2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelTitulo2.setText("Práctica 2: Autómatas Finitos Deterministas y No Deterministas");

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelUHU.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelUHU.setText("Universidad de Huelva");

        jLabelAutor2.setText("Ingeniería Informatica - Software");

        jLabelAutor1.setText("Jonathan Jiménez Reina");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelAutor2)
                .addGap(24, 24, 24))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelUHU))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabelAutor1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelUHU)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelAutor2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jLabelAutor1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelAutomataFinito)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(botonCargarFichero, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(textPasoAPaso, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botonPasoSiguiente))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(textAceptarRechazar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(26, 26, 26)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(labelIntroduceSecuencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(campoIntroduceCadena)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(botonSimular, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(16, 16, 16))))))
                .addGap(0, 27, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTitulo1)
                    .addComponent(jLabelTitulo2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabelTitulo1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelTitulo2)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(labelIntroduceSecuencia)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(campoIntroduceCadena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(botonSimular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 6, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)))
                        .addComponent(textAceptarRechazar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botonPasoSiguiente)
                            .addComponent(textPasoAPaso)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonCargarFichero, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelAutomataFinito)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método para cargar un autómata desde fichero
     *
     * @param evt
     */
    private void botonCargarFicheroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCargarFicheroActionPerformed
        ArrayList<String[]> tablaEstados;
        //Abrimos una ventana para elegir el fichero, partiendo del directorio actual
        ventanaEligeFichero.setCurrentDirectory(new File(System.getProperty("user.dir")));
        int val = ventanaEligeFichero.showOpenDialog(this);
        if (val == JFileChooser.APPROVE_OPTION) {
            //Reiniciamos la tabla del autómata y los campos con el resultado
            vaciarCampos();
            //Seleccionamos el archivo
            File archivo = ventanaEligeFichero.getSelectedFile();
            try {
                //Guardamos en tablaEstados lo que leemos del fichero
                tablaEstados = a.cargarAutomata(archivo);
                //Actualizamos el número de columnas en la tabla si es necesario
                modeloTabla.setColumnCount(tablaEstados.get(0).length + 1);

                //Actualizamos los títulos de cada una de las columnas, que serán los símbolos
                String[] nomCol = new String[tablaEstados.get(0).length + 1];
                nomCol[0] = "";
                for (int i = 1; i < tablaEstados.get(0).length + 1; i++) {
                    nomCol[i] = tablaEstados.get(0)[i - 1];
                }
                modeloTabla.setColumnIdentifiers(nomCol);

                //Añadimos las transiciones a la tabla
                for (int i = 1; i < tablaEstados.size(); i++) {
                    modeloTabla.addRow(tablaEstados.get(i));
                }
            } catch (Exception ex) {
                JPanel panel = new JPanel();
                JOptionPane.showMessageDialog(panel, "Error al abrir el archivo", "Error", JOptionPane.ERROR_MESSAGE);
            }

            informarTipoAutomata();
        }
    }//GEN-LAST:event_botonCargarFicheroActionPerformed

    /**
     * Método en el que indicamos en una Label si el autómata es determinista o
     * no y dependiendo del tipo activamos o no la solucion paso a paso
     */
    public void informarTipoAutomata() {
        if (a.getTipoAutomata().equals("determinista")) {
            jLabel4.setText("DETERMINISTA");
            jRadioButtonSimulacionRapida.setEnabled(true);
            jRadioButtonPasoAPaso.setEnabled(true);
        } else {
            jLabel4.setText("INDETERMINISTA");
            jRadioButtonSimulacionRapida.setEnabled(true);
            jRadioButtonPasoAPaso.setEnabled(false);
        }
    }

    /**
     * Método que hace la simulación del autómata
     *
     * @param evt
     */
    private void botonSimularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSimularActionPerformed
        //Borramos el cuadro de la solución paso a paso
        textPasoAPaso.setText(" ");
        //textoSol2.setText(" ");
        //Cancelamos la posibilidad de elegir el siguiente paso
        botonPasoSiguiente.setEnabled(false);
        //Reiniciamos el autómata
        a.reiniciarAutomata();
        //Leemos la cadena de entrada
        entrada = campoIntroduceCadena.getText();
        //En esta variable guardamos los pasos realizados por el autómata
        String solucion = "";

        //Si es indeterminista
        if (a.getTipoAutomata().equals("indeterminista")) {
            try {
                ArrayList<String> sol = new ArrayList<>();
                a.AFND(entrada, a.getEstado(), sol);
                for (String r : a.getEstadosSolucion()) {
                    solucion += " -> " + r;
                }
            } catch (Exception ex) {
                JPanel panel = new JPanel();
                JOptionPane.showMessageDialog(panel, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
            //Actualizamos los campos de la solución
            pintarSolucionesAFND();
        } else { //Si es determinista
            if (jRadioButtonSimulacionRapida.isSelected()) { //Si queremos la solución en un único paso
                try {
                    solucion = "-> " + a.getEstado();
                    for (int i = 0; i < entrada.length(); i++) {
                        a.getSiguienteEstado(entrada.charAt(i));
                        solucion += " -> " + a.getEstado();
                    }
                } catch (Exception ex) {
                    JPanel panel = new JPanel();
                    JOptionPane.showMessageDialog(panel, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
                //Actualizamos los campos de la solución
                pintarSolucionAFD(solucion);
            } else { //Si queremos la solución en varios pasos
                if (jRadioButtonPasoAPaso.isSelected()) {
                    //Reiniciamos el autómata
                    a.reiniciarAutomata();
                    //Leemos la cadena de entrada
                    entrada = campoIntroduceCadena.getText();
                    botonSimular.setEnabled(false);
                    try {
                        //Actualizamos los campos con el estado inicial
                        textCuadroSolucion.setText("-> " + a.getEstado());
                        textAceptarRechazar.setText(" ");
                        textPasoAPaso.setText("Entrada: " + entrada);
                        //Si hay más pasos, habilitamos el botón de siguiente paso
                        if (!entrada.isEmpty()) {
                            botonPasoSiguiente.setEnabled(true);
                        } //Si no, lo deshabilitamos
                        else {
                            pintarSolucionAFD(solucion);
                        }
                    } catch (Exception ex) {
                        JPanel panel = new JPanel();
                        JOptionPane.showMessageDialog(panel, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }

        }
    }//GEN-LAST:event_botonSimularActionPerformed

    /**
     * Pinta una o varias soluciones del AFND
     */
    public void pintarSolucionesAFND() {
        a.reconocer();
        textAceptarRechazar.setText(a.getEsAceptada() + " (" + entrada + ")");
        textCuadroSolucion.setText("");
        for (ArrayList<String> s : a.getSoluciones()) {
            textCuadroSolucion.append("Solucion " + a.getSoluciones().indexOf(s) + ": ");
            for (String ss : s) {
                textCuadroSolucion.append(" ->" + ss);
            }
            textCuadroSolucion.append("\r\n");
        }
    }

    /**
     * Método para actualizar campos solucion de la interfaz gráfica
     *
     * @param solucion Camino solucion que se muestra en la caja de texto grande
     */
    public void pintarSolucionAFD(String solucion) {
        a.reconocer();
        textAceptarRechazar.setText(a.getEsAceptada() + " (" + entrada + ")");
        textCuadroSolucion.setText(solucion);
    }

    /**
     * Método para la simulacion paso por paso
     *
     */
    int i = 0; //Contador para ir moviendonos por los caracteres de entrada
    private void botonPasoSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPasoSiguienteActionPerformed
        //Actualizamos la entrada restante
        String entradaParcial = entrada.substring(i + 1);
        try {
            //Realizamos la transición
            a.getSiguienteEstado(entrada.charAt(i));
            //Actualizamos los campos con la solución parcial
            textCuadroSolucion.setText(textCuadroSolucion.getText() + " -> " + a.getEstado());
            textPasoAPaso.setText("Entrada: " + entradaParcial);
            //Si no hay más símbolos de entrada, actualizamos la solución
            //y deshabilitamos el botón de siguiente paso
            if (entradaParcial.isEmpty()) {
                a.reconocer();
                textAceptarRechazar.setText(a.getEsAceptada() + " (" + entrada + ")");
                botonPasoSiguiente.setEnabled(false);
            }
            i++; //Actualizo el contador para que avance en los caracteres de entrada
        } catch (Exception ex) {
            JPanel panel = new JPanel();
            JOptionPane.showMessageDialog(panel, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botonPasoSiguienteActionPerformed

    /**
     * Acciones para cuando selecionamos la simulacion rápida -Desactivamos el
     * radio button de paso por paso -Habilitamos el boton para poder simular
     *
     * @param evt
     */
    private void jRadioButtonSimulacionRapidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSimulacionRapidaActionPerformed
        jRadioButtonPasoAPaso.setSelected(false);
        botonSimular.setEnabled(true);
    }//GEN-LAST:event_jRadioButtonSimulacionRapidaActionPerformed

    /**
     * Acciones para cuando selecionamos la simulacion paso por paso
     * -Desactivamos el radio button de simulacion rapida -Habilitamos el boton
     * para poder simular
     *
     * @param evt
     */
    private void jRadioButtonPasoAPasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPasoAPasoActionPerformed
        jRadioButtonSimulacionRapida.setSelected(false);
        botonSimular.setEnabled(true);
    }//GEN-LAST:event_jRadioButtonPasoAPasoActionPerformed

    /**
     * Método para resetear la tabla y campos solucion
     */
    private void vaciarCampos() {
        while (modeloTabla.getRowCount() > 0) {
            modeloTabla.removeRow(0);
        }
        textAceptarRechazar.setText(" ");
        textCuadroSolucion.setText(" ");
        textPasoAPaso.setText(" ");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Menu().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCargarFichero;
    private javax.swing.JButton botonPasoSiguiente;
    private javax.swing.JButton botonSimular;
    private javax.swing.JTextField campoIntroduceCadena;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelAutomataFinito;
    private javax.swing.JLabel jLabelAutor1;
    private javax.swing.JLabel jLabelAutor2;
    private javax.swing.JLabel jLabelTipoSimulacion;
    private javax.swing.JLabel jLabelTitulo1;
    private javax.swing.JLabel jLabelTitulo2;
    private javax.swing.JLabel jLabelUHU;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButtonPasoAPaso;
    private javax.swing.JRadioButton jRadioButtonSimulacionRapida;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelIntroduceSecuencia;
    private javax.swing.JTable tabla;
    private javax.swing.JLabel textAceptarRechazar;
    private javax.swing.JTextArea textCuadroSolucion;
    private javax.swing.JLabel textPasoAPaso;
    private javax.swing.JFileChooser ventanaEligeFichero;
    // End of variables declaration//GEN-END:variables

}
